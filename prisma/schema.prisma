// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  password String
  firstName String
  lastName String
  recipes Recipe[]
  favorites Favorite[]
  createdAt DateTime @default(now())
}

model Category {
  id Int @id @default(autoincrement())
  name String
  description String?
  recipes Recipe[]
  createdAt DateTime @default(now())
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

model Recipe {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  instructions String
  prepTime    Int
  cookTime    Int
  difficulty  Difficulty
  ingredients String
  image       String   @db.Text
  userId      Int
  categoryId  Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
  category    Category @relation(fields: [categoryId], references: [id])
  favorites   Favorite[]

  @@map("recipes")
}

model Favorite {
  userId Int
  recipeId Int
  user User @relation(fields: [userId], references: [id])
  recipe Recipe @relation(fields: [recipeId], references: [id])
  createdAt DateTime @default(now())

  @@id([userId, recipeId])
}